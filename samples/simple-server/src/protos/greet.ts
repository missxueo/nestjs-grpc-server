// @generated by protobuf-ts 2.9.1 with parameter optimize_code_size,output_typescript,long_type_bigint,server_grpc1,server_generic
// @generated from protobuf file "protos/greet.proto" (package "greet.v1", syntax proto3)
// tslint:disable
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message greet.v1.GreetRequest
 */
export interface GreetRequest {
    /**
     * @generated from protobuf field: string to = 1;
     */
    to: string;
    /**
     * @generated from protobuf field: string content = 2;
     */
    content: string;
}
/**
 * @generated from protobuf message greet.v1.GreetResponse
 */
export interface GreetResponse {
    /**
     * @generated from protobuf field: string from = 1;
     */
    from: string;
    /**
     * @generated from protobuf field: string reply = 2;
     */
    reply: string;
}
// @generated message type with reflection information, may provide speed optimized methods
class GreetRequest$Type extends MessageType<GreetRequest> {
    constructor() {
        super("greet.v1.GreetRequest", [
            { no: 1, name: "to", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "content", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message greet.v1.GreetRequest
 */
export const GreetRequest = new GreetRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GreetResponse$Type extends MessageType<GreetResponse> {
    constructor() {
        super("greet.v1.GreetResponse", [
            { no: 1, name: "from", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "reply", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message greet.v1.GreetResponse
 */
export const GreetResponse = new GreetResponse$Type();
/**
 * @generated ServiceType for protobuf service greet.v1.GreetService
 */
export const GreetService = new ServiceType("greet.v1.GreetService", [
    { name: "Hello", options: {}, I: GreetRequest, O: GreetResponse },
    { name: "Hi", serverStreaming: true, options: {}, I: GreetRequest, O: GreetResponse }
]);
